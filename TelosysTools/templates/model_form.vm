/*
 * Java bean class for entity table ${beanClass.sqlTable} 
 * Created on $today.date ( Time $today.time )
 * Generated by $generator.name ( version $generator.version )
 */

package ${target.javaPackageFromFolder($project.srcFolder)};


#foreach( $import in $beanClass.imports )
import $import;
#end

/**
 * Model/Form for table "${beanClass.sqlTable}"
 * 
 * @author Telosys Tools Generator
 *
 */
public class ${beanClass.name}Form
{

#foreach( $field in $beanClass.keyAttributes )
    private $field.formatedType(10) $field.formatedName(12) #if($field.hasInitialValue())= ${field.initialValue} #end; // Primary Key
#end

#foreach( $field in $beanClass.nonKeyAttributes )
    private $field.formatedType(10) $field.formatedName(12) #if($field.hasInitialValue())= ${field.initialValue} #end;
#end

    
    //----------------------------------------------------------------------
    // GETTER(S) & SETTER(S) FOR THE PRIMARY KEY 
    //----------------------------------------------------------------------
#foreach( $field in $beanClass.keyAttributes )
#if ( $field.setter )    
    /**
     * Set the "$field.name" field value
#if ( $field.databaseName )     * This field is mapped on the database column "$field.databaseName" ( type "$field.databaseType", NotNull : $field.isDatabaseNotNull ) 
#end
     * @param $field.name
     */
	public void ${field.setter}( $field.type $field.name )
    {
        this.$field.name = $field.name ;
    }
#end
#if ( $field.getter )    
    /**
     * Get the "$field.name" field value
#if ( $field.databaseName )     * This field is mapped on the database column "$field.databaseName" ( type "$field.databaseType", NotNull : $field.isDatabaseNotNull ) 
#end
     * @return the field value
     */
	public $field.type ${field.getter}()
    {
        return this.$field.name;
    }
#end
#end

    //----------------------------------------------------------------------
    // GETTER(S) & SETTER(S) FOR DATA FIELDS
    //----------------------------------------------------------------------
#foreach( $field in $beanClass.nonKeyAttributes )
#if ( $field.databaseName )    //--- DATABASE MAPPING : $field.databaseName ( $field.databaseType ) 
#end
#if ( $field.setter )
    /**
     * Set the "$field.name" field value
#if ( $field.databaseName )     * This field is mapped on the database column "$field.databaseName" ( type "$field.databaseType", NotNull : $field.isDatabaseNotNull ) 
#end
     * @param $field.name
     */
    public void ${field.setter}( $field.type $field.name )
    {
        this.$field.name = $field.name;
    }
#end
#if ( $field.getter )
    /**
     * Get the "$field.name" field value
#if ( $field.databaseName )     * This field is mapped on the database column "$field.databaseName" ( type "$field.databaseType", NotNull : $field.isDatabaseNotNull ) 
#end
     * @return the field value
     */
    public $field.type ${field.getter}()
    {
        return this.$field.name;
    }
#end

#end  
}
