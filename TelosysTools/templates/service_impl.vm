/*
 * Java bean class for entity table ${beanClass.sqlTable} 
 * Created on $today.date ( Time $today.time )
 * Generated by $generator.name ( version $generator.version )
 */

package ${target.javaPackageFromFolder($project.srcFolder)};

import java.util.List;
import java.util.ArrayList;
import org.apache.log4j.Logger;
import org.springframework.stereotype.Service;
import ${BASE_PKG}.domain.${beanClass.name};
import ${BASE_PKG}.dto.${beanClass.name}Dto;
import ${BASE_PKG}.service.${beanClass.name}Service;
import ${BASE_PKG}.service.abstracts.GenericServiceImpl;
import ${BASE_PKG}.dao.${beanClass.name}Dao;

#foreach( $import in $beanClass.imports )
import $import;
#end

/**
 * Service implementation for table "${beanClass.sqlTable}"
 * 
 * @author Telosys Tools Generator
 *
 */
#foreach( $field in $beanClass.keyAttributes )
	#set( $primaryKeyType = $field.formatedType(0) )
#end
@Service("${beanClass.name}")
public class ${beanClass.name}ServiceImpl extends GenericServiceImpl<${beanClass.name}Dao, ${beanClass.name},$primaryKeyType>  implements ${beanClass.name}Service
{
   private static final Logger logger = Logger.getLogger(${beanClass.name}ServiceImpl.class);
	
#foreach( $field in $beanClass.nonKeyAttributes )
	/**
	 * Find ${beanClass.name} by ${field.formatedName(0)}
	 */
	@Override
	public List<${beanClass.name}Dto> findBy${field.formatedName(0)}($field.formatedType(0) ${field.formatedName(0)}) {
		logger.debug("Begin executing findBy${field.formatedName(0)} method...");
		List<${beanClass.name}Dto> lstRet = new ArrayList<${beanClass.name}Dto>();
		List<${beanClass.name}> bos = dao.findBy${field.formatedName(0)}(${field.formatedName(0)});
		for (${beanClass.name} item : bos) {
			lstRet.add(mapper.map(item, ${beanClass.name}Dto.class));
		}
		
		logger.debug("End executing findBy${field.formatedName(0)} method, returning value...");
		return lstRet;
	}
	
#end
}