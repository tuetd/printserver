/*
 * Java bean class for entity table GROUP_M 
 * Created on 3 Oct 2013 ( Time 10:38:10 )
 * Generated by Telosys Tools Generator ( version 2.0.0 )
 */

package com.pruvn.rms.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.validation.Valid;

import org.apache.commons.lang.StringUtils;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.pruvn.rms.domain.GroupM;
import com.pruvn.rms.model.GroupMForm;
import com.pruvn.rms.service.GroupMService;
import com.pruvn.rms.utils.CommonUtils;
import com.pruvn.rms.utils.Constant.ParameterApplication;

/**
 * Controller implementation for table "GROUP_M"
 * 
 * @author Telosys Tools Generator
 * 
 */

@Controller
public class GroupController {
	private static final Logger logger = Logger
			.getLogger(GroupController.class);

	private GroupMService groupMService;

	/**
	 * @return the GroupMService
	 */
	public GroupMService getGroupMService() {
		return groupMService;
	}

	/**
	 * @param GroupMService
	 *            the GroupMService to set
	 */
	@Autowired
	public void setGroupMService(GroupMService groupMService) {
		this.groupMService = groupMService;
	}

	@RequestMapping(value = "/admin/grouplist", method = RequestMethod.GET)
	public String groupMlist(Model model, HttpServletRequest request,
			HttpServletResponse response) {
		logger.debug("reach GroupMController#userlist...");
		List<GroupM> list = groupMService.findAll();
		model.addAttribute("groupMList", list);
		return "groupMlist";
	}

	@RequestMapping(value = "/admin/groupmod", method = RequestMethod.GET)
	public String createGroupM(Model model, HttpServletRequest request,
			HttpServletResponse response) {
		logger.debug("reach GroupMController#creategroupM...");
		GroupMForm form = new GroupMForm();
		String groupMid = request.getParameter("id");
		if (StringUtils.isNotEmpty(groupMid)
				&& CommonUtils.isNumeric(groupMid.trim())) {
			// Get user and popular this user to form
			GroupM groupM = groupMService.getById(new Integer(groupMid));
			if (groupM != null) {

				form.setGroupid(groupM.getGroupid());
				form.setGroupcode(groupM.getGroupcode());
				form.setGroupname(groupM.getGroupname());
				form.setGroupdesc(groupM.getGroupdesc());
				form.setIsActived(groupM.getIsActived() != null && groupM.getIsActived() == ParameterApplication.ACTIVE.getStatus());
			}
		}
		model.addAttribute(form);
		return "groupMmod";
	}

	@RequestMapping(value = "/admin/groupmod", method = RequestMethod.POST)
	public String createGroupMSubmit(@Valid GroupMForm form,
			BindingResult result, Model model, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		logger.debug("reach GroupMController#creategroupMSubmit...");
		GroupM groupM = null;

		if (form.getGroupid() != null && form.getGroupid() > 0) {
			groupM = groupMService.getById(form.getGroupid());
		} else {
			groupM = groupMService.findByCode(form.getGroupcode());

			if (groupM != null) {
				result.reject("groupM.notexisted",
						"GroupM " + form.getGroupcode() + " existed !");
				model.addAttribute(form);
				return "groupMmod";
			}
		}

		if (groupM == null) {
			groupM = new GroupM();
		}

		groupM.setGroupid(form.getGroupid());
		groupM.setGroupcode(form.getGroupcode());
		groupM.setGroupname(form.getGroupname());
		groupM.setGroupdesc(form.getGroupdesc());
		groupM.setIsActived(form.getIsActived() ? ParameterApplication.ACTIVE.getStatus() : ParameterApplication.NOACTIVE.getStatus());
		groupMService.saveOrUpdate(groupM);

		return "redirect:/admin/grouplist.html";
	}

	@RequestMapping(value = "/admin/groupdel", method = RequestMethod.GET)
	public String groupMdel(Model model, HttpServletRequest request,
			HttpServletResponse response) {
		logger.debug("reach GroupMController#groupMdel...");
		String groupMid = request.getParameter("id");
		if (StringUtils.isNotEmpty(groupMid)
				&& CommonUtils.isNumeric(groupMid.trim())) {
			// Get groupM and popular this user to form
			GroupM groupM = groupMService.getById(new Integer(groupMid));
			if (groupM != null) {
				groupM.setIsActived(ParameterApplication.NOACTIVE.getStatus());
				groupMService.saveOrUpdate(groupM);
			}
		}
		return "redirect:/admin/grouplist.html";
	}
}