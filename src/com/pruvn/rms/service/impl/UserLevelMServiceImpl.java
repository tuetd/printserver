/*
 * Java bean class for entity table user_level_m 
 * Created on 17 May 2013 ( Time 17:03:25 )
 * Generated by Telosys Tools Generator ( version 2.0.0 )
 */

package com.pruvn.rms.service.impl;

import java.util.ArrayList;
import java.util.List;

import org.apache.log4j.Logger;

import com.pruvn.rms.dao.UserLevelMDao;
import com.pruvn.rms.domain.UserLevelM;
import com.pruvn.rms.dto.UserLevelMDto;
import com.pruvn.rms.service.UserLevelMService;
import com.pruvn.rms.service.abstracts.GenericServiceImpl;


/**
 * Service implementation for table "user_level_m"
 * 
 * @author Telosys Tools Generator
 *
 */
public class UserLevelMServiceImpl extends GenericServiceImpl<UserLevelMDao, UserLevelM,Integer>  implements UserLevelMService
{
   private static final Logger logger = Logger.getLogger(UserLevelMServiceImpl.class);
	
	/**
	 * Find UserLevelM by levelcode
	 */
	@Override
	public List<UserLevelMDto> findBylevelcode(String levelcode) {
		logger.debug("Begin executing findBylevelcode method...");
		List<UserLevelMDto> lstRet = new ArrayList<UserLevelMDto>();
		List<UserLevelM> bos = dao.findBylevelcode(levelcode);
		for (UserLevelM item : bos) {
			lstRet.add(mapper.map(item, UserLevelMDto.class));
		}
		
		logger.debug("End executing findBylevelcode method, returning value...");
		return lstRet;
	}
	
	@Override
	public UserLevelM findBylevelcode1(String levelcode) {
		List<UserLevelM> userLevelMs = dao.findBylevelcode(levelcode);
		
		if (userLevelMs != null && userLevelMs.size() > 0) {
			return userLevelMs.get(0);
		}
		
		return null;
	}
	
	/**
	 * Find UserLevelM by levelname
	 */
	@Override
	public List<UserLevelMDto> findBylevelname(String levelname) {
		logger.debug("Begin executing findBylevelname method...");
		List<UserLevelMDto> lstRet = new ArrayList<UserLevelMDto>();
		List<UserLevelM> bos = dao.findBylevelname(levelname);
		for (UserLevelM item : bos) {
			lstRet.add(mapper.map(item, UserLevelMDto.class));
		}
		
		logger.debug("End executing findBylevelname method, returning value...");
		return lstRet;
	}
	
	/**
	 * Find UserLevelM by leveldesc
	 */
	@Override
	public List<UserLevelMDto> findByleveldesc(String leveldesc) {
		logger.debug("Begin executing findByleveldesc method...");
		List<UserLevelMDto> lstRet = new ArrayList<UserLevelMDto>();
		List<UserLevelM> bos = dao.findByleveldesc(leveldesc);
		for (UserLevelM item : bos) {
			lstRet.add(mapper.map(item, UserLevelMDto.class));
		}
		
		logger.debug("End executing findByleveldesc method, returning value...");
		return lstRet;
	}
	
}