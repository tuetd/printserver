/*
 * Java bean class for entity table RM_TB6 
 * Created on 3 Oct 2013 ( Time 12:18:01 )
 * Generated by Telosys Tools Generator ( version 2.0.0 )
 */

package com.pruvn.rms.dao.impl;

import java.sql.SQLException;
import java.util.List;

import org.hibernate.HibernateException;
import org.hibernate.SQLQuery;
import org.hibernate.Session;
import org.hibernate.criterion.MatchMode;
import org.hibernate.criterion.Restrictions;
import org.springframework.orm.hibernate3.HibernateCallback;

import com.pruvn.rms.dao.ForeclosureDao;
import com.pruvn.rms.domain.Foreclosure;
import com.pruvn.rms.model.FilterMRCForm;
import com.pruvn.rms.utils.CommonUtils;
import com.pruvn.rms.utils.SqlConstant;


/**
 * Data Access Object implementation for table "RM_Foreclosure"
 * 
 * @author Telosys Tools Generator
 *
 */
public class ForeclosureHibernateDao extends AbstractHibernateDAO<Foreclosure, Integer> implements ForeclosureDao {

	
	public Foreclosure findByLoanNo(String loanNo) {
		List<Foreclosure> list =  findByCriteria(Restrictions.eq("loanNo", loanNo));		
		if(list != null && list.size() > 0){
			return list.get(0);
		}
		return null;
	}
	
	public List<Foreclosure> searchByLoanNo(String loanNo) {
		List<Foreclosure> list =  findByCriteria(Restrictions.like("loanNo", loanNo,MatchMode.ANYWHERE));		
		return list;
	}
	
	@SuppressWarnings({ "unchecked", "rawtypes" })
	public List<Foreclosure> getForeclosureList(final String stage,
			final FilterMRCForm filterMRCForm) {
		return (List<Foreclosure>) getHibernateTemplate().execute(new HibernateCallback() {
            public Object doInHibernate(final Session session) throws HibernateException, SQLException {
            	StringBuffer sqlQuery  = new StringBuffer(SqlConstant.SELECT_FORECLOSURE_LIST_ACL);
            	if(!CommonUtils.isNullOrEmpty(stage)) {  
            		sqlQuery.append(" AND STAGE= '" + stage + "'");
            	}
            	if(!CommonUtils.isNullOrEmpty(filterMRCForm.getLoanNo())) {            		
            		sqlQuery.append(" AND LOAN_NO like '%" + filterMRCForm.getLoanNo() + "%'");
            	}            	
            	if(!CommonUtils.isNullOrEmpty(filterMRCForm.getDateSend())) {            		
            		sqlQuery.append(" AND SEND_DATE = to_date('" + filterMRCForm.getDateSend() + "','dd/MM/rrrr')");
            	}
        		SQLQuery query = session.createSQLQuery(
        				sqlQuery.toString());
        		//query.setParameter("username", username);
        		//query.setParameter("stage", stage);
        		query.addEntity(Foreclosure.class);
        		List<Foreclosure> result = query.list();
        		return result;
            }
        });
		
		
		
		
		
		
	}
	
	
}